Реализована простейшая база данных (БД), работающая с пользователем через стандартный ввод-вывод.

В БД хранятся пары вида (дата, событие). Дата -- строка вида год-месяц-день. Ограничения на день и месяц естественные, год может быть отрицательным числом (до нашей эры), но выводить такие даты БД не умеет. Событие -- строка из печатных символов без разделителей внутри. Не может быть пустой строкой. В одну и ту же дату может произойти несколько событий, одинаковые события БД не хранит.

БД понимает команды:

- добавление события: Add дата событие
    ничего не выводит на экран

- удаление события: Del дата событие
    если событие найдено и удалено, программа выведет на экран "Deleted successfully", иначе "Event not found"
- удаление всех событий за конкретную дату: Del дата
    выведет строчку "Deleted N events", N может быть равно 0
- поиск событий за конкретную дату: Find дата
    печатает события по одному на строке в алфавитном порядке
- печать всех событий за все даты: Print
    выводим дату в виде гггг-мм-дд (если число имеет меньше разрядов, дополняем его нулями, к примеру 0120-01-02). Вывод отсортирован по дате, события идут в алфавитном порядке.

Обработка ошибок:

Программа обрабатывает ошибки:
- неизвестная команда (команда -- первое слово в строке до пробела)
- проверка валидности даты

Команда занимает одну строчку (могут быть пустые строки, программа их игнорирует).
В строчке всегда корректное количество аргументов (не может быть ситуации Add день или Add событие).
Все команды, даты и события являются непустыми строками и не содержат пробелов и прочих пробельных символов.

В планах:
- разбить программу на несколько файлов для удобства отладки
- научиться корректно выводить даты с отрицательным годом (скорее всего, вывод будет в виде -гггг-мм-дд)
- более общая обработка некорректного ввода команд (умение обаботать команды вида Add день -- говорить пользователю, что такой ввод недопустим)
- усовершенствовать команды Find и Del (к примеру, добавить обработку логических высказваний с помощью операций AND OR NOT > < == !=; программа будет понимать команду вида Find date >= 2017-01-01 AND date < 2017-07-01 AND event == "sport event")

